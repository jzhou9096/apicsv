name: Update CSV File

# 触发条件：每天在指定时间执行
on:
  schedule:
    # 定义 CRON 表达式：每天7:05、12:05、14:05、19:05、22:05执行
    - cron: '5 7 * * *'   # 每天7:05
    - cron: '5 12 * * *'  # 每天12:05
    - cron: '5 14 * * *'  # 每天14:05
    - cron: '5 19 * * *'  # 每天19:05
    - cron: '5 22 * * *'  # 每天22:05

  # 手动触发（可选）
  workflow_dispatch:

jobs:
  update-csv:
    runs-on: ubuntu-latest  # 选择运行环境，可以是 Ubuntu、Windows 或 MacOS

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # 检出仓库代码

    - name: Set up Python
      uses: actions/setup-python@v2  # 设置 Python 环境
      with:
        python-version: '3.x'  # 指定 Python 版本

    - name: Install dependencies
      run: |
        pip install requests  # 安装所需的 Python 包
        pip install gitpython

    - name: Download CSV and Update Repository
      run: |
        import os
        import requests
        from git import Repo

        # 配置文件路径和仓库路径
        REPO_PATH = os.getenv('GITHUB_WORKSPACE')  # GitHub Actions 中，仓库路径是 GITHUB_WORKSPACE
        FILE_PATH = 'jzhou9096/jilianip/addtro.csv'  # 你想更新的文件在仓库中的路径

        # 下载 CSV 文件
        CSV_URL = "https://addcsv.sosorg.nyc.mn/addressesapi.csv?token=ZYSS"
        response = requests.get(CSV_URL)

        if response.status_code == 200:
            # 保存 CSV 内容到文件
            with open(os.path.join(REPO_PATH, FILE_PATH), "w") as file:
                file.write(response.text)
            print("CSV 文件已更新")

            # 提交并推送更新
            repo = Repo(REPO_PATH)
            index = repo.index
            index.add([FILE_PATH])
            index.commit("Update CSV file")
            origin = repo.remotes.origin
            origin.push()
            print("文件已上传到 GitHub")
        else:
            print(f"下载失败，状态码: {response.status_code}")

      env:
        GITHUB_TOKEN: ${{ jilianipduqu }}  # 使用 GitHub 提供的自动令牌
